{
  "entities": {
    "Quiz": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Quiz",
      "type": "object",
      "description": "Represents a quiz with a set of questions.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the quiz."
        },
        "title": {
          "type": "string",
          "description": "Title of the quiz."
        },
        "description": {
          "type": "string",
          "description": "Description of the quiz content."
        }
      },
      "required": [
        "id",
        "title",
        "description"
      ]
    },
    "Question": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Question",
      "type": "object",
      "description": "Represents a single question in a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the question."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to the Quiz this question belongs to. (Relationship: Quiz 1:N Question)"
        },
        "text": {
          "type": "string",
          "description": "The text of the question."
        },
        "options": {
          "type": "array",
          "description": "Array of possible answer options.",
          "items": {
            "type": "string"
          }
        },
        "correctAnswerIndex": {
          "type": "number",
          "description": "The index of the correct answer in the options array."
        },
        "explanation": {
          "type": "string",
          "description": "Explanation about the correct answer using genAI."
        }
      },
      "required": [
        "id",
        "quizId",
        "text",
        "options",
        "correctAnswerIndex"
      ]
    },
    "QuizAttempt": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "QuizAttempt",
      "type": "object",
      "description": "Represents a user's attempt at taking a quiz.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the quiz attempt."
        },
        "quizId": {
          "type": "string",
          "description": "Reference to the Quiz being attempted. (Relationship: Quiz 1:N QuizAttempt)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who is attempting the quiz. (Relationship: User 1:N QuizAttempt)"
        },
        "startTime": {
          "type": "string",
          "description": "Timestamp indicating when the quiz attempt started.",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "description": "Timestamp indicating when the quiz attempt ended.",
          "format": "date-time"
        },
        "score": {
          "type": "number",
          "description": "The score achieved on the quiz attempt."
        }
      },
      "required": [
        "id",
        "quizId",
        "userId",
        "startTime",
        "endTime",
        "score"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "Username of the user."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "AttemptAnswer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AttemptAnswer",
      "type": "object",
      "description": "Represents the answer given by a user for a specific question in a quiz attempt.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the attempt answer."
        },
        "quizAttemptId": {
          "type": "string",
          "description": "Reference to the QuizAttempt this answer belongs to. (Relationship: QuizAttempt 1:N AttemptAnswer)"
        },
        "questionId": {
          "type": "string",
          "description": "Reference to the Question being answered. (Relationship: Question 1:N AttemptAnswer)"
        },
        "selectedAnswerIndex": {
          "type": "number",
          "description": "The index of the answer option selected by the user."
        },
        "isCorrect": {
          "type": "boolean",
          "description": "Indicates whether the selected answer was correct."
        }
      },
      "required": [
        "id",
        "quizAttemptId",
        "questionId",
        "selectedAnswerIndex",
        "isCorrect"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, matching their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}",
        "definition": {
          "entityName": "Quiz",
          "schema": {
            "$ref": "#/backend/entities/Quiz"
          },
          "description": "Stores quiz definitions. Publicly readable but only editable by admins (not implemented in this data structure).",
          "params": [
            {
              "name": "quizId",
              "description": "The unique identifier of the quiz."
            }
          ]
        }
      },
      {
        "path": "/quizzes/{quizId}/questions/{questionId}",
        "definition": {
          "entityName": "Question",
          "schema": {
            "$ref": "#/backend/entities/Question"
          },
          "description": "Stores questions associated with a specific quiz.",
          "params": [
            {
              "name": "quizId",
              "description": "The unique identifier of the quiz."
            },
            {
              "name": "questionId",
              "description": "The unique identifier of the question."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quiz_attempts/{quizAttemptId}",
        "definition": {
          "entityName": "QuizAttempt",
          "schema": {
            "$ref": "#/backend/entities/QuizAttempt"
          },
          "description": "Stores quiz attempts made by a specific user. Accessible only by the user themselves.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, matching their Firebase Auth UID."
            },
            {
              "name": "quizAttemptId",
              "description": "The unique identifier of the quiz attempt."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/quiz_attempts/{quizAttemptId}/attempt_answers/{attemptAnswerId}",
        "definition": {
          "entityName": "AttemptAnswer",
          "schema": {
            "$ref": "#/backend/entities/AttemptAnswer"
          },
          "description": "Stores the answers given by a user for a specific question in a quiz attempt. Accessible only by the user themselves. Includes denormalized 'quizAttemptId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user, matching their Firebase Auth UID."
            },
            {
              "name": "quizAttemptId",
              "description": "The unique identifier of the quiz attempt."
            },
            {
              "name": "attemptAnswerId",
              "description": "The unique identifier of the attempt answer."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a quiz application tailored for Bangladeshi children. It emphasizes authorization independence and efficient data retrieval.  User data is stored in a private path (`/users/{userId}`), ensuring only the user can access their information. Quizzes are stored in a top-level `/quizzes` collection, while questions are stored as subcollections under each quiz (`/quizzes/{quizId}/questions`).  Quiz attempts are also structured under the user's private path (`/users/{userId}/quiz_attempts`). The selected answers made during a quiz attempt are stored in a subcollection (`/users/{userId}/quiz_attempts/{quizAttemptId}/attempt_answers`). This design promotes clear ownership and simplifies security rules. To ensure Authorization Independence, any data needed for authorization in subcollections (such as quiz ownership or user membership) is denormalized into the subcollection documents.\n\nSpecifically:\n\n*   **Authorization Independence (Denormalization):**  The `AttemptAnswer` subcollection stores the `quizAttemptId` which can be used to locate the parent document allowing for security rules that do not require `get()` calls.\n*   **QAPs (List Security):** The structure allows for secure listing of quizzes, questions, quiz attempts, and attempt answers, as each collection is secured based on its specific access requirements."
  }
}